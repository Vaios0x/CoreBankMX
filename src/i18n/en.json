{
  "nav": {
    "home": "Home",
    "dashboard": "Dashboard",
    "borrow": "Borrow",
    "repay": "Repay",
    "positions": "Positions",
    "liquidity": "Liquidity",
    "admin": "Admin"
  },
  "home": {
    "badge": "Build on Core DAO • BTCfi • DeFi • Web3",
    "title": "Web3 Neobank on Core: remittances and loans with BTC as collateral",
    "subtitle": "Lock bridged BTC in a non-custodial vault and receive USDT. Dynamic LTV with oracles (Pyth/RedStone), secure auto-liquidations, and Dual Staking option to compound yields.",
    "start_button": "Get Started",
    "dashboard_button": "View Dashboard",
    "connect_hint": "Connect your wallet to start",
    "features": {
      "remittances": "Remittances + Off-ramp MXN",
      "remittances_desc": "Fast transfers and on/off-ramp via integrations (e.g., Bitso) outside the contract.",
      "loans": "BTC Loans",
      "loans_desc": "Lock BTC/lstBTC as collateral to receive USDT with dynamic LTV.",
      "staking": "Dual Staking",
      "staking_desc": "Option for depositors: compound yields and improve APR.",
      "oracles": "Oracles and Circuit Breakers",
      "oracles_desc": "Pyth/RedStone, controlled staleness and deviation for security.",
      "compliance": "Compliance",
      "compliance_desc": "KYC/KYB in app when there's fiat, geofencing and travel rule.",
      "gas_rebates": "Gas Rebates",
      "gas_rebates_desc": "Leverage Core incentives to reduce transaction costs."
    },
    "steps": {
      "step1": "Connect your wallet",
      "step1_desc": "Compatible with Web3Modal/Wagmi.",
      "step2": "Lock BTC",
      "step2_desc": "Use bridge and deposit collateral in the vault.",
      "step3": "Take your loan",
      "step3_desc": "Receive USDT and manage your LTV.",
      "step4": "Compound and pay",
      "step4_desc": "Optional Dual Staking; repay when you want."
    },
    "note": "Note: this product works on Core (Mainnet/Testnet). Fiat integrations (KYC/KYB and on/off-ramp) happen at the app layer and are not part of the contract.",
    "beta": "Beta",
    "view_metrics": "View metrics",
    "ltv_title": "How do we calculate LTV and Health Factor?",
    "ltv_desc": "LTV (Loan-to-Value) indicates what percentage of your collateral value is borrowed.",
    "ltv_points": [
      "LTV = debt / collateral value in USD. Collateral value is obtained with oracles (Pyth/RedStone) with staleness and deviation protections.",
      "There is a liquidation LTV configured in the market. If your LTV exceeds it, your position can be partially liquidated to return to a safe level.",
      "Health Factor (HF) adds a safety margin over LTV. If HF < 1, the account is liquidatable. We recommend maintaining HF ≥ 1.5 for normal market conditions.",
      "To improve your HF: add more collateral or reduce your debt (repay). In the 'Borrow' flow you'll see alerts and the button is disabled if HF < 1.2."
    ]
  },
  "borrow": {
    "collateral_label": "Collateral (BTC)",
    "collateral_tip": "BTC amount to lock as collateral",
    "borrow_label": "Borrow (USDT)",
    "borrow_tip": "USDT amount to receive",
    "error_amount": "Enter a valid amount",
    "warning_hf": "High risk: low health factor",
    "error_ltv": "LTV exceeds liquidation threshold",
    "suggested_ltv_prefix": "Suggested (target LTV",
    "collateral_usd": "Collateral USD",
    "ltv_label": "LTV",
    "health_label": "Health",
    "liquidation_ltv": "Liquidation LTV",
    "learn_ltv": "Learn about LTV",
    "toast_approving": "Approving collateral…",
    "toast_approve_sent_base": "Approve tx sent:",
    "toast_approve_failed": "Approve failed",
    "approve_button": "Approve",
    "toast_borrowing": "Sending borrow…",
    "toast_borrow_sent_base": "Borrow tx sent:",
    "toast_borrow_failed": "Borrow failed",
    "borrow_button": "Borrow",
    "disabled_reason": "Borrow is disabled: health factor is below 1.2. Lower LTV by increasing collateral or requesting less.",
    "why_disabled": "Why is it disabled?",
    "copy_link": "Copy link",
    "link_copied": "Link copied to clipboard",
    "reset_filters": "Reset filters"
  },
  "repay": {
    "repay_label": "Repay (USDT)",
    "repay_tip": "USDT amount to repay",
    "withdraw_label": "Withdraw (BTC)",
    "withdraw_tip": "BTC to withdraw on repayment",
    "error_amount": "Enter a valid amount",
    "repay_slider_label": "Amount shortcut",
    "max_withdraw_label": "Safe max withdraw",
    "use_max": "Use max",
    "after_collateral_usd": "Collateral USD (post-action)",
    "after_ltv": "LTV (post-action)",
    "after_health": "Health (post-action)",
    "after_health_warning": "Warning: health factor will be low after this action.",
    "after_health_danger": "Danger: health factor will be in liquidation zone.",
    "withdraw_exceeds_max": "Proposed withdrawal exceeds safe maximum.",
    "withdraw_disabled_reason": "You cannot withdraw more: you would exceed safe LTV after repayment.",
    "submitting": "Submitting repayment…",
    "tx_sent_base": "Repay tx sent:",
    "failed": "Repay failed",
    "repay_button": "Repay",
    "copy_link": "Copy link",
    "link_copied": "Link copied to clipboard",
    "reset_filters": "Reset filters"
  },
  "positions": {
    "actions": "Actions",
    "empty": "No positions",
    "add_collateral": "Add collateral",
    "repay": "Repay",
    "note_prices": "Current BTC/USD price",
    "note_prices_suffix": "(reference for LTV/HF calculation)"
  },
  "dashboard": {
    "subtitle": "Market health and key metrics",
    "oracle_stale": "Oracle data may be stale",
    "recalculate": "Recalculate",
    "loading": "Loading…",
    "metrics_24h": "24h Metrics",
    "active_positions": "Active positions",
    "liquidations_24h": "Liquidations 24h",
    "liquidations_recent": "Liquidations (recent)",
    "deployed_contracts": "Deployed contracts"
  },
  "header": {
    "network_aria": "Current network status",
    "switch_to_mainnet": "Switch to Mainnet",
    "switch_to_testnet": "Switch to Testnet",
    "to_mainnet": "Mainnet",
    "to_testnet": "Testnet",
    "copy_address": "Copy address",
    "disconnect": "Disconnect",
    "toggle_sidebar": "Toggle sidebar",
    "toggle_theme": "Toggle theme",
    "toggle_language": "Toggle language"
  },
  "footer": {
    "description": "Remittances and loans with BTC as collateral on Core. Security, performance and simple UX.",
    "company": "Company",
    "subscribe": "Subscribe",
    "email_label": "Email address",
    "subscribe_button": "Subscribe",
    "email_error": "Enter a valid email",
    "subscribe_success": "Thank you for subscribing",
    "no_spam": "No spam. Cancel anytime.",
    "terms": "Terms",
    "privacy": "Privacy",
    "cookies": "Cookies",
    "product": "Product",
    "developers": "Developers",
    "status": "Status",
    "product": {
      "dashboard": "Dashboard",
      "borrow": "Borrow",
      "repay": "Repay",
      "positions": "Positions"
    },
    "developers": {
      "docs": "Docs",
      "api": "API",
      "status": "Status",
      "github": "GitHub"
    },
    "company": {
      "about": "About",
      "press": "Press",
      "contact": "Contact",
      "careers": "Careers"
    }
  },
  "docs": {
    "title": "Documentation",
    "subtitle": "Quick guides, references and useful project links.",
    "protocol": {
      "title": "Protocol",
      "subtitle": "On-chain architecture, oracles and market parameters.",
      "contracts": [
        "CollateralVault: manages deposits and withdrawals.",
        "LoanManager: manages loans and LTV.",
        "LiquidationModule: handles liquidations and incentives.",
        "OracleRouter: routes price requests with circuit breakers."
      ],
      "key_params": "Key parameters",
      "params": [
        "Target/Liquidation LTV thresholds.",
        "Staleness/Deviation thresholds for oracles.",
        "Interest rates and fees."
      ],
      "external_docs": "External documentation:"
    },
    "api": {
      "title": "API",
      "subtitle": "REST API endpoints for market data and oracle prices.",
      "endpoints": [
        "GET /market/params: market parameters.",
        "GET /market/prices/:symbol: price by symbol (uses cache/oracle).",
        "GET /market/metrics: aggregated metrics.",
        "GET /oracle/status: oracle router status."
      ]
    }
  },
  "admin": {
    "title": "Admin",
    "subtitle": "Read-only market parameters",
    "market_params": "Market parameters (read-only)"
  },
  "common": {
    "loading": "Loading…",
    "error": "Error",
    "success": "Success",
    "cancel": "Cancel",
    "confirm": "Confirm",
    "save": "Save",
    "edit": "Edit",
    "delete": "Delete",
    "close": "Close",
    "back": "Back",
    "next": "Next",
    "previous": "Previous"
  }
}

